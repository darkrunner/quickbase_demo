plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.palantir.docker" version "0.22.1"
}

group = 'com.quickbase.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.7'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

def h2Profile='h2'
def postgresProfile='postgres'
def activeProfile


if (project.hasProperty('postgres')) {
    activeProfile = postgresProfile;
    apply from: 'profiles/profile_postgres.gradle'
} else {
    activeProfile = h2Profile
    apply from: 'profiles/profile_h2.gradle';
}

bootJar {
    baseName = 'demo'
    version = project.version
}

bootRun {
    systemProperties([
            'spring.profiles.active': activeProfile
    ])
}

docker {
    name "${project.name}:${project.version}"
    files bootJar
}